on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_IAM_ROLE_NAME: ${{ vars.AWS_IAM_ROLE_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions:
      id-token: write
      contents: read
    steps:
      # Slack通知？
      ### TODO ###
      # ソース取得
      - name: Checkout
        uses: actions/checkout@v3
      # AWSの権限設定
      - run: |
          echo "env=${{ env.AWS_ACCOUNT_ID }} and ${{ env.AWS_IAM_ROLE_NAME }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: 'arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_IAM_ROLE_NAME }}'
          aws-region: ap-northeast-1
      # ECRにログイン
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      # ECRにプッシュ
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      # デプロイ実行環境準備
      - uses: kayac/ecspresso@v2
        with:
          version: latest
      # デプロイ前確認:ecspresso verify
      ### TODO ###
      # デプロイ実施
      - name: Deploy to Amazon ECS
        env:
          IMAGE_TAG: ${{ github.sha }} # MUST env
        run: |
          ecspresso deploy --no-wait --config ecspresso/flask-app.yaml
      # Slack通知:デプロイが走っていることを通知する。no-waitのため完了ではない
      ### TODO ###
